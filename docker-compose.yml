version: '3.3'
services:
  api:
    platform: linux/amd64
    build:
      dockerfile: Dockerfile
      context: ./backend
    image: webpersonal.azurecr.io/jb-api:latest
    ports:
      - "8080:8080"
    expose:
      - 8080
    environment:
      - NODE_ENV=development
      - SERVER_PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=mysecretpassword
      - DB_NAME=postgres
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.dockerfile
    image: webpersonal.azurecr.io/jb-frontend:latest
    volumes:
      - ./frontend/src:/app/src
    ports:
      - "3001:3001"
    expose:
      - 3001
  frontend-prod:
    build:
      context: ./frontend
    image: webpersonal.azurecr.io/jb-frontend:latest
    ports:
      - "8081:80"
    expose:
      - 8081
  frontend-v2:
    build:
      context: ./frontend_nextjs
    image: webpersonal.azurecr.io/jb-frontend:latest
    ports:
      - "3000:3000"
    expose:
      - 3000
  db:
    image: postgres:14.6-alpine # this is the image that we want to run (aka app)
    restart: always
    ports:
      - "5432:5432" # we want to expose port `5432` on our computer and map it to 5432 in the container
    expose:
      - 5432
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - db-data:/var/lib/postgresql/data # mounting a local folder into the container
  test:
    build:
      dockerfile: Dockerfile.test
      context: ./backend

volumes:
  db-data: {}