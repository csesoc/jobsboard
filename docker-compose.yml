version: '3.8'
services:
  api:
    platform: linux/amd64
    build:
      dockerfile: dev.dockerfile
      context: ./backend
    image: webpersonal.azurecr.io/jb-api:latest
    restart: always
    volumes:
      - ./backend/src:/app/src
      - /app/src/node_modules/
    ports:
      - 8080:8080
    expose:
      - 8080
    links:
      - db
    environment:
      - NODE_ENV=development
      - SERVER_PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=mysecretpassword
      - DB_NAME=postgres
      - MAIL_USERNAME=test@gmail.com
      - MAIL_PASSWORD=password
      - MAIL_SMTP_SERVER=smtp.gmail.com
      - MAIL_SMTP_SERVER_PORT=465
  frontend-prod:
    build:
      context: ./frontend
    image: webpersonal.azurecr.io/jb-frontend:latest
    ports:
      - 8081:80
    expose:
      - 8081
  frontend-vue:
    build:
      context: ./frontend_vue
      dockerfile: dev.dockerfile
    image: webpersonal.azurecr.io/jb-frontend:latest
    volumes:
      - ./frontend/src:/app/src
    ports:
      - 3001:3001
    expose:
      - 3001
  db:
    image: postgres:14.7-alpine # this is the image that we want to run (aka app)
    restart: always
    ports:
      - 5432:5432
    expose:
      - 5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - db-data:/var/lib/postgresql/data
  test:
    build:
      dockerfile: test.dockerfile
      context: ./backend
    links:
      - db
      - api

volumes:
  db-data: {}